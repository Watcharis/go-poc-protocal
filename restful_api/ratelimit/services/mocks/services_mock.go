// Code generated by MockGen. DO NOT EDIT.
// Source: services/services.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	models "watcharis/go-poc-protocal/restful_api/ratelimit/models"

	gomock "github.com/golang/mock/gomock"
)

// MockServices is a mock of Services interface.
type MockServices struct {
	ctrl     *gomock.Controller
	recorder *MockServicesMockRecorder
}

// MockServicesMockRecorder is the mock recorder for MockServices.
type MockServicesMockRecorder struct {
	mock *MockServices
}

// NewMockServices creates a new mock instance.
func NewMockServices(ctrl *gomock.Controller) *MockServices {
	mock := &MockServices{ctrl: ctrl}
	mock.recorder = &MockServicesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServices) EXPECT() *MockServicesMockRecorder {
	return m.recorder
}

// CreateOtp mocks base method.
func (m *MockServices) CreateOtp(ctx context.Context, req models.OtpRequest) (models.OtpResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOtp", ctx, req)
	ret0, _ := ret[0].(models.OtpResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOtp indicates an expected call of CreateOtp.
func (mr *MockServicesMockRecorder) CreateOtp(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOtp", reflect.TypeOf((*MockServices)(nil).CreateOtp), ctx, req)
}

// CreateUserProfile mocks base method.
func (m *MockServices) CreateUserProfile(ctx context.Context, req models.ProifleRequest) (models.ProifleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserProfile", ctx, req)
	ret0, _ := ret[0].(models.ProifleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUserProfile indicates an expected call of CreateUserProfile.
func (mr *MockServicesMockRecorder) CreateUserProfile(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserProfile", reflect.TypeOf((*MockServices)(nil).CreateUserProfile), ctx, req)
}

// GetUserProfile mocks base method.
func (m *MockServices) GetUserProfile(ctx context.Context, uuid string) (models.ProifleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserProfile", ctx, uuid)
	ret0, _ := ret[0].(models.ProifleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserProfile indicates an expected call of GetUserProfile.
func (mr *MockServicesMockRecorder) GetUserProfile(ctx, uuid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserProfile", reflect.TypeOf((*MockServices)(nil).GetUserProfile), ctx, uuid)
}

// VerifyOtpRatelimit mocks base method.
func (m *MockServices) VerifyOtpRatelimit(ctx context.Context, req models.VerifyOtpRatelimitRequest) (models.VerifyOtpRatelimitResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyOtpRatelimit", ctx, req)
	ret0, _ := ret[0].(models.VerifyOtpRatelimitResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyOtpRatelimit indicates an expected call of VerifyOtpRatelimit.
func (mr *MockServicesMockRecorder) VerifyOtpRatelimit(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyOtpRatelimit", reflect.TypeOf((*MockServices)(nil).VerifyOtpRatelimit), ctx, req)
}
